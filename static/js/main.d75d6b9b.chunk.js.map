{"version":3,"sources":["components/searchComponent.jsx","components/graphComponent.jsx","components/TeamComponent.jsx","services/combination-service.js","components/teamBuilderComponent.jsx","App.js","serviceWorker.js","index.js","assets/strength-table.csv","assets/strategies.csv","assets/usage.csv"],"names":["SearchComponent","props","state","Container","fluid","Row","Col","React","Component","GraphComponent","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","values","className","style","height","width","options","maintainAspectRatio","TeamComponent","num","pokemonList","onChange","Error","pokemonSlots","i","id","enabled","event","pokemons","this","concat","target","value","setState","filter","x","map","y","poke","index","InputGroup","key","Prepend","Checkbox","FormControl","as","e","onInputChange","listPoke","name","CombinationService","strengthRows","columns","loadStrTablePromise","Promise","resolve","reject","a","axios","get","strengthTableUrl","strengthTableTextRes","loadStrTableResult","loadStrengthTable","console","log","loadStrategiesPromise","strategiesUrl","strategiesTextRes","loadStrategyInfoToStrTable","loadUsageInfoPromise","usageUrl","usageTextRes","loadUsageInfo","all","tableText","tableRows","replace","split","slice","isEmptyString","length","forEach","row","every","records","strengthRow","trim","v","parseFloat","push","strategiesText","strategiesRow","parseInt","type","hasBoost","indexOf","find","strategyType","usageText","usageRows","usageInfo","usageMap","Map","usage","set","usageBaseRatio","undefined","duplicateCounts","vector","firstPokemonIndex","firstPoke","compatibleStrTypes","compatibleTypes","secondPoke","searchMinimumRow","filterStrengthRows","v1","v2","cosineSimilarity","vectorFirstAndSecond","addVector","JSON","stringify","maximumValueStep34","Number","MIN_SAFE_INTEGER","thirdPoke","fourthPoke","filteredStrRows34","j","cropedV1","cropedV2","k","combinedVector","cos","absSin","Math","sqrt","product","dotProduct","vector4Pokemons","addVectors","maximumValueStep5","filteredStrRows5","fifthPoke","vector5Pokemons","weakestSlot","weakestValue","MAX_VALUE","sixthPoke","searchMaximumRow","finalVector","targetVector","evaluationFunc","minimumValue","minimumRow","strRow","val","arguments","newVec","elementsSum","vector1","vector2","l2norm","sum","acceptableTypes","teamPokemonIndices","pokemonVectors","pokeIndexStr","pokeIndex","TeamBuilderComponent","combinationService","loading","loadMasterData","then","teamPokemonNameMap","getAllTeamPokemonNames","toString","strVectorColumns","getAllTargetPokemonNames","error","indices","teamStrengthValues","strValuesOfTeam","md","onChangeTeamPokemons","App","Navbar","bg","Brand","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.d75d6b9b.chunk.js","sourcesContent":["import React from 'react';\r\n// import './App.css';\r\n// import { combinationCalculator } from './combination-calculator';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nexport class SearchComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <h1>New Search</h1>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n    )};\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Container } from \"react-bootstrap\";\r\nimport {Bar} from 'react-chartjs-2';\r\n\r\nexport const GraphComponent = (props) => {\r\n  const labels = props.labels;\r\n  const values = props.values;\r\n\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: 'Strength value',\r\n        backgroundColor: 'rgba(255,99,132,0.2)',\r\n        borderColor: 'rgba(255,99,132,1)',\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n        hoverBorderColor: 'rgba(255,99,132,1)',\r\n        data: values\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container fluid className=\"mt-5\">\r\n        <Row>\r\n          <Col>\r\n            <h1>Strength Values of Your Team</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <div style={{height: 500}}>\r\n              <Bar\r\n                data={data}\r\n                width={100}\r\n                height={50}\r\n                options={{\r\n                  maintainAspectRatio: false\r\n                }}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n}","import React from 'react';\r\nimport { Container, Row, Col, InputGroup, FormControl } from 'react-bootstrap'\r\n\r\nexport class TeamComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.num = props.num;\r\n    this.pokemonList = props.pokemonList;\r\n    this.onChange = props.onChange;\r\n    if (!this.num || this.num < 1) {\r\n      throw new Error ('Error: team length must be more than 0');\r\n    }\r\n\r\n    const pokemonSlots = [];\r\n    for (let i = 0; i < this.num; i++) {\r\n      pokemonSlots[i] = {\r\n        id: this.pokemonList[i].id,\r\n        enabled: true\r\n      }\r\n    }\r\n\r\n    this.state = {\r\n      pokemonSlots: pokemonSlots\r\n    }\r\n  }\r\n\r\n  onInputChange(num, event) {\r\n    const pokemons = this.state.pokemonSlots.concat();\r\n    pokemons[num].id = event.target.value;\r\n\r\n    this.setState({\r\n      pokemons: pokemons\r\n    });\r\n\r\n    this.onChange(this.state.pokemonSlots.filter(x => x.enabled).map(y => y.id));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <>\r\n      <Container fluid>\r\n        <Row>\r\n          <Col>\r\n            <Row>\r\n              <Col>\r\n                <h1>Your Team</h1>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <div>\r\n                    {\r\n                      this.state.pokemonSlots && this.state.pokemonSlots.map((poke, index) => \r\n                        <InputGroup className=\"mb-2\" key={index}>\r\n                          <InputGroup.Prepend>\r\n                            <InputGroup.Checkbox/>\r\n                          </InputGroup.Prepend>\r\n                          <FormControl as=\"select\" value={poke.id} onChange={(e) => this.onInputChange(index, e)}>\r\n                            {this.pokemonList.map(listPoke => (<option key={listPoke.id} value={listPoke.id}>{listPoke.name}</option>))}\r\n                          </FormControl>\r\n                        </InputGroup>\r\n                      )\r\n                    }\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  )};\r\n}\r\n","import strengthTableUrl from '../assets/strength-table.csv';\r\nimport strategiesUrl from '../assets/strategies.csv';\r\nimport usageUrl from '../assets/usage.csv';\r\nimport axios from 'axios';\r\n\r\nexport class CombinationService {\r\n\r\n  constructor() {\r\n    this.strengthRows = null;\r\n    this.columns = null;\r\n  }\r\n\r\n  async loadMasterData() {\r\n    const loadStrTablePromise = new Promise(async (resolve, reject) => {\r\n      try {\r\n        const strengthTableTextRes = await axios.get(strengthTableUrl);\r\n        const loadStrTableResult = this.loadStrengthTable(strengthTableTextRes.data);\r\n        this.strengthRows = loadStrTableResult.strengthRows;\r\n        this.columns = loadStrTableResult.columns;\r\n        console.log(`strength table was successfully loaded`);\r\n        resolve();\r\n      } catch (error) {\r\n        reject(error);\r\n        throw new Error('Error: failed to get strength table data from URL')\r\n      }\r\n    });\r\n\r\n    const loadStrategiesPromise = new Promise(async (resolve, reject) => {\r\n      try {\r\n        const strategiesTextRes = await axios.get(strategiesUrl);\r\n        this.loadStrategyInfoToStrTable(strategiesTextRes.data, this.strengthRows);\r\n        console.log(`strategy information was successfully loaded`);\r\n        resolve();\r\n      } catch (error) {\r\n        reject(error);\r\n        throw new Error('Error: failed to get strategy data from URL')\r\n      }\r\n    });\r\n\r\n    const loadUsageInfoPromise = new Promise(async (resolve, reject) => {\r\n      try {\r\n        const usageTextRes = await axios.get(usageUrl);\r\n        this.loadUsageInfo(usageTextRes.data, this.columns, this.strengthRows);\r\n        console.log(`usage information was successfully loaded`);\r\n        resolve();\r\n      } catch (error) {\r\n        reject(error);\r\n        throw new Error('Error: failed to get usage data from URL')\r\n      }\r\n    });\r\n\r\n    await Promise.all([loadStrTablePromise, loadStrategiesPromise, loadUsageInfoPromise]);\r\n  }\r\n\r\n  loadStrengthTable(tableText) {\r\n    tableText = tableText.replace('\\r\\n', '\\n');\r\n    let tableRows = tableText.split('\\n');\r\n      \r\n    const columns = tableRows[0].split(',').slice(1).filter(x => !this.isEmptyString(x));\r\n    console.log(`${columns.length} columns exist`);\r\n    \r\n    let strengthRows = []; \r\n    let index = 0;\r\n    tableRows.slice(1).forEach(row => {\r\n      if (!row) {\r\n        return;\r\n      }\r\n    \r\n      if (row.split(',').every(x => this.isEmptyString(x))) {\r\n        return;\r\n      }\r\n      const records = row.split(',');\r\n      const strengthRow = {};\r\n      strengthRow['index'] = index++;\r\n      strengthRow['name'] = records[0].trim();\r\n      const values = records.slice(1).filter(x => !this.isEmptyString(x));\r\n      if (columns.length !== values.length) {\r\n        throw new Error('error: the number of column is not same among all rows');\r\n      }\r\n      strengthRow['originalVector'] = values.map(v => parseFloat(v.trim()));\r\n      strengthRow['vector'] = values.map(v => parseFloat(v.trim()));\r\n      \r\n      strengthRows.push(strengthRow);\r\n    });\r\n  \r\n    console.log(`${strengthRows.length} rows are loaded`);\r\n  \r\n    return { columns, strengthRows};\r\n  }\r\n  \r\n  // load strategy info from text and add params to strength table\r\n  loadStrategyInfoToStrTable(strategiesText, strengthRows) {\r\n    strategiesText = strategiesText.replace('\\r\\n', '\\n');\r\n    const strategiesRows = strategiesText.split('\\n');\r\n  \r\n    strategiesRows.slice(1).forEach(strategiesRow => {\r\n      if (strategiesRow.split(',').every(x => this.isEmptyString(x))) {\r\n        return;\r\n      }\r\n  \r\n      const records = strategiesRow.split(',');\r\n      if (records.length < 3) {\r\n        throw new Error('error: invalid strategies records');\r\n      }\r\n  \r\n      const index = parseInt(records[0].trim());\r\n      const name = records[1].trim();\r\n      const type = records[2].trim();\r\n      const hasBoost = (records.length > 3 && records[3].trim() === 'Yes');\r\n  \r\n      if (index > strengthRows.length - 1) {\r\n        throw new Error(`error: index ${index} is out of range of strength table`);\r\n      }\r\n  \r\n      const row = strengthRows[index];\r\n  \r\n      if (row.name !== name) {\r\n        throw new Error(`error: species name ${name} is not match with the row [${index}] of the strength table`);\r\n      }\r\n  \r\n      const validStrategiesType = [\r\n        'Sweeper', 'Tank', 'Wall', 'Support'\r\n      ];\r\n      \r\n      if (validStrategiesType.indexOf(type) < 0) {\r\n        throw new Error(`error: invalid strategy type ${type}`);\r\n      }\r\n  \r\n      row['strategyType'] = type;\r\n      row['hasBoost'] = hasBoost;\r\n    });\r\n  \r\n    if (!strengthRows.find(x => x.hasBoost)) {\r\n      throw new Error('error: no boost attacker is found');\r\n    }\r\n  \r\n    strengthRows.forEach(x => {\r\n      if (!x.strategyType) {\r\n        throw new Error(`error: strategy type of pokemon ${x.name} is not set`);\r\n      }\r\n    });\r\n  }\r\n  \r\n  loadUsageInfo(usageText, columns, strengthRows) {\r\n    usageText = usageText.replace('\\r\\n', '\\n');\r\n  \r\n    const usageRows = usageText.split('\\n');\r\n    const usageInfo = [];\r\n    const usageMap = new Map();\r\n    usageRows.slice(1).forEach(row => {\r\n      if (!row) {\r\n        return;\r\n      }\r\n    \r\n      if (row.split(',').every(x => this.isEmptyString(x))) {\r\n        return;\r\n      }\r\n    \r\n      const records = row.split(',');\r\n      if (records.length < 2) {\r\n        throw new Error('error: invalid usage records');\r\n      }\r\n    \r\n      const name = records[0].trim();\r\n      const usage = parseFloat(records[1].trim());\r\n      usageMap.set(name, usage);\r\n    \r\n      usageInfo.push({name, usage});\r\n    });\r\n    \r\n    const usageBaseRatio = [];\r\n    for (let i = 0; i < columns.length; i++) {\r\n      if (usageMap.get(columns[i]) === undefined) {\r\n        throw new Error(`error: usage information for pokemon ${columns[i]} is not found`);\r\n      }\r\n  \r\n      const duplicateCounts = columns.filter(x => x === columns[i]).length;\r\n      usageBaseRatio[i] = usageMap.get(columns[i]) / duplicateCounts;\r\n    }\r\n  \r\n    strengthRows.forEach(row => {\r\n      for (let i = 0; i < columns.length; i++) {\r\n        row.vector[i] *= (usageBaseRatio[i] / 100);\r\n      }\r\n    })\r\n  }\r\n\r\n  constructTeamByIngenMethod(strengthRows, firstPokemonIndex) {\r\n    // (1) select the first pokemon\r\n    const firstPoke = strengthRows[firstPokemonIndex];\r\n    console.log(`firstPoke: ${firstPoke.name}\\n`);\r\n    strengthRows = strengthRows.filter(x => x.index != firstPoke.index);\r\n    const compatibleStrTypes = this.compatibleTypes(firstPoke.strategyType);\r\n  \r\n    // (2) search the second pokemon which complements the first pokemon\r\n    const resultStep2 = this.searchMinimumRow(firstPoke.vector, \r\n      this.filterStrengthRows(compatibleStrTypes, strengthRows), (v1, v2) => this.cosineSimilarity(v1, v2));\r\n    const secondPoke = resultStep2.row;\r\n    console.log(`secondPoke: ${secondPoke.name}\\n`);\r\n    strengthRows = strengthRows.filter(x => x.index != secondPoke.index);\r\n  \r\n    // (3)(4) search the third and fourth pokemon which cover weak slots of the first and second\r\n    const vectorFirstAndSecond = this.addVector(firstPoke.vector, secondPoke.vector);\r\n    console.log(JSON.stringify(vectorFirstAndSecond))\r\n    let maximumValueStep34 = Number.MIN_SAFE_INTEGER;\r\n    let thirdPoke = null;\r\n    let fourthPoke = null;\r\n    const filteredStrRows34 = this.filterStrengthRows(compatibleStrTypes, strengthRows);\r\n    // temporary search all combinations\r\n    for (let i = 0; i < filteredStrRows34.length; i++) {\r\n      for (let j = i + 1; j < filteredStrRows34.length; j++) {\r\n        const cropedV1 = [];\r\n        const cropedV2 = [];\r\n        for (let k = 0; k < vectorFirstAndSecond.length; k++) {\r\n          if (vectorFirstAndSecond[k] < 0) {\r\n            cropedV1.push(filteredStrRows34[i].vector[k]);\r\n            cropedV2.push(filteredStrRows34[j].vector[k]);\r\n          }\r\n        }\r\n  \r\n        const combinedVector = this.addVector(cropedV1, cropedV2);\r\n        const cos = this.cosineSimilarity(cropedV1, cropedV2);\r\n        const absSin = Math.sqrt(1 - cos * cos);\r\n        const product = this.dotProduct(combinedVector, combinedVector.map(x => 1.0));\r\n        const value = product * absSin;\r\n  \r\n        console.log(`${filteredStrRows34[i].name} + ${filteredStrRows34[j].name}: ${value}(${product} * ${absSin})`);\r\n        if (value > maximumValueStep34) {\r\n          maximumValueStep34 = value;\r\n          thirdPoke = filteredStrRows34[i];\r\n          fourthPoke = filteredStrRows34[j];\r\n        }\r\n      }\r\n    }\r\n  \r\n    console.log(`thirdPoke: ${thirdPoke.name}`);\r\n    console.log(`fourthPoke: ${fourthPoke.name}\\n`);\r\n    strengthRows = strengthRows.filter(x => x.index != thirdPoke.index);\r\n    strengthRows = strengthRows.filter(x => x.index != fourthPoke.index);\r\n  \r\n  \r\n    // (5) search fifth boost attacker pokemon which leverages weak slots of above 4 pokemons\r\n    const vector4Pokemons = this.addVectors(firstPoke.vector, secondPoke.vector, thirdPoke.vector, fourthPoke.vector);\r\n    console.log(JSON.stringify(vector4Pokemons))\r\n    let maximumValueStep5 = Number.MIN_SAFE_INTEGER;\r\n    const filteredStrRows5 = strengthRows.filter(x => x.hasBoost);\r\n    let fifthPoke = null;\r\n    for (let i = 0; i < filteredStrRows5.length; i++) {\r\n      const cropedV1 = [];\r\n      for (let j = 0; j < vector4Pokemons.length; j++) {\r\n        if (vector4Pokemons[j] < 0) {\r\n          cropedV1.push(filteredStrRows5[i].vector[j]);\r\n        }\r\n      }\r\n  \r\n      const product = this.dotProduct(cropedV1, cropedV1.map(x => 1.0));\r\n      const value = product;\r\n  \r\n      console.log(`${filteredStrRows5[i].name}: ${value}`);\r\n      if (value > maximumValueStep5) {\r\n        maximumValueStep5 = value;\r\n        fifthPoke = filteredStrRows5[i];\r\n      }\r\n    }\r\n  \r\n    console.log(`fifthPoke: ${fifthPoke.name}\\n`);\r\n    strengthRows = strengthRows.filter(x => x.index != fifthPoke.index);\r\n  \r\n    // (6) search sixth pokemon which covers the weakest pokemon of 5\r\n    const vector5Pokemons = this.addVectors(firstPoke.vector, secondPoke.vector, thirdPoke.vector, fourthPoke.vector, fifthPoke.vector);\r\n    console.log(JSON.stringify(vector5Pokemons))\r\n    let weakestSlot = -1;\r\n    let weakestValue = Number.MAX_VALUE;\r\n    for (let i = 0; i < vector5Pokemons.length; i++) {\r\n      const value = vector5Pokemons[i];\r\n      if (value < weakestValue) {\r\n        weakestValue = value;\r\n        weakestSlot = i;\r\n      }\r\n    }\r\n  \r\n    console.log(`weakest slot is ${weakestSlot}(${this.columns[weakestSlot]}): ${weakestValue}`);\r\n  \r\n    const resultStep6 = this.searchMaximumRow(null, strengthRows, (v1, v2) => v2[weakestSlot]);\r\n    const sixthPoke = resultStep6.row;\r\n    console.log(`sixthPoke: ${sixthPoke.name}\\n`);\r\n  \r\n    console.log(`${firstPoke.name} (norm: ${this.dotProduct(firstPoke.vector, firstPoke.vector.map(x => 1))})`);\r\n    console.log(`${secondPoke.name} (norm: ${this.dotProduct(secondPoke.vector, secondPoke.vector.map(x => 1))})`);\r\n    console.log(`${thirdPoke.name} (norm: ${this.dotProduct(thirdPoke.vector, thirdPoke.vector.map(x => 1))})`);\r\n    console.log(`${fourthPoke.name} (norm: ${this.dotProduct(fourthPoke.vector, fourthPoke.vector.map(x => 1))})`);\r\n    console.log(`${fifthPoke.name} (norm: ${this.dotProduct(fifthPoke.vector, fifthPoke.vector.map(x => 1))})`);\r\n    console.log(`${sixthPoke.name} (norm: ${this.dotProduct(sixthPoke.vector, sixthPoke.vector.map(x => 1))})`);\r\n  \r\n    const finalVector = this.addVectors(firstPoke.vector, secondPoke.vector, thirdPoke.vector, fourthPoke.vector, fifthPoke.vector, sixthPoke.vector);\r\n    console.log(JSON.stringify(finalVector));\r\n  }\r\n  \r\n  // search the row which has the minimum value on the evaluation function\r\n  searchMinimumRow(targetVector, strengthRows, evaluationFunc) {\r\n    let minimumValue = Number.MAX_VALUE;\r\n    let minimumRow = null;\r\n    strengthRows.forEach(strRow => {\r\n      const val = evaluationFunc(targetVector, strRow.vector);\r\n      console.log(`${strRow.name}: ${val}`);\r\n      if (val < minimumValue) {\r\n        minimumValue = val;\r\n        minimumRow = strRow;\r\n      }\r\n    });\r\n  \r\n    return { row: minimumRow, value: minimumValue };\r\n  }\r\n  \r\n  searchMaximumRow(targetVector, strengthRows, evaluationFunc) {\r\n    const inverseEvalFunc = (v1, v2) => -1 * evaluationFunc(v1, v2);\r\n    return this.searchMinimumRow(targetVector, strengthRows, inverseEvalFunc);\r\n  }\r\n  \r\n  \r\n  addVectors() {\r\n    const length = arguments[0].length;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n      if (length !== arguments[i].length) {\r\n        throw new Error('the number of elements is not same');\r\n      }\r\n      \r\n    }\r\n  \r\n    const newVec = [];\r\n    for (let i = 0; i < length; i++) {\r\n      let elementsSum = 0;\r\n      for (let j = 0; j < arguments.length; j++) {\r\n        elementsSum += arguments[j][i];\r\n      }\r\n      newVec.push(elementsSum);\r\n    } \r\n  \r\n    return newVec;\r\n  }\r\n  \r\n  addVector(vector1, vector2) {\r\n    if (vector1.length !== vector2.length) {\r\n      throw new Error('the number of elements is not same');\r\n    }\r\n  \r\n    const newVec = [];\r\n    for (let i = 0; i < vector1.length; i++) {\r\n      newVec.push(vector1[i] + vector2[i]);\r\n    } \r\n  \r\n    return newVec;\r\n  }\r\n  \r\n  cosineSimilarity(v1, v2) {\r\n    return this.dotProduct(v1, v2) / (this.l2norm(v1) * this.l2norm(v2));\r\n  }\r\n  \r\n  dotProduct(vector1, vector2) {\r\n    if (vector1.length !== vector2.length) {\r\n      throw new Error('the number of elements is not same');\r\n    }\r\n  \r\n    let sum = 0;\r\n    for (let i = 0; i < vector1.length; i++) {\r\n      sum += vector1[i] * vector2[i];\r\n    }\r\n  \r\n    return sum;\r\n  }\r\n  \r\n  l2norm(vector) {\r\n    let sum = 0;\r\n    vector.forEach(x => {\r\n      sum += x * x;\r\n    });\r\n  \r\n    sum = Math.sqrt(sum);\r\n    return sum;\r\n  }\r\n  \r\n  isEmptyString(x) {\r\n    return (x === '' || x === '\\n' || x === '\\r');\r\n  }\r\n  \r\n  compatibleTypes(strategyType) {\r\n    let compatibleTypes = [];\r\n  \r\n    if (strategyType === 'Sweeper') {\r\n      compatibleTypes = ['Sweeper', 'Tank'];\r\n    } else if (strategyType === 'Tank') {\r\n      compatibleTypes = ['Sweeper', 'Tank', 'Wall'];\r\n    } else if (strategyType === 'Wall') {\r\n      compatibleTypes = ['Tank', 'Wall'];\r\n    }\r\n  \r\n    return compatibleTypes;\r\n  }\r\n  \r\n  filterStrengthRows(acceptableTypes, strengthRows) {\r\n    return strengthRows.filter(x => acceptableTypes.indexOf(x.strategyType) >= 0);\r\n  }\r\n\r\n  getAllTeamPokemonNames() {\r\n    // we can get all team (candidate) pokemon names also from the strategy info\r\n    // which is better?\r\n\r\n    return this.strengthRows.map(row => row.name);\r\n  }\r\n\r\n  getAllTargetPokemonNames() {\r\n    return this.columns;\r\n  }\r\n\r\n  strValuesOfTeam(teamPokemonIndices) {\r\n    // is it needed to remove duplications about team members?\r\n\r\n    const pokemonVectors = teamPokemonIndices.map(pokeIndexStr => {\r\n      const pokeIndex = parseInt(pokeIndexStr);\r\n\r\n      if (!(0 <= pokeIndex && pokeIndex <= this.strengthRows.length - 1)) {\r\n        throw new Error ('Error: pokemon index is out of the range');\r\n      }\r\n\r\n      const row = this.strengthRows[pokeIndex];\r\n      return row.vector;\r\n    });\r\n\r\n    const combinedVector = this.addVectors(...pokemonVectors);\r\n\r\n    return combinedVector;\r\n  }\r\n}","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { SearchComponent } from './searchComponent';\r\nimport { GraphComponent } from './graphComponent';\r\nimport { TeamComponent } from './TeamComponent';\r\nimport { CombinationService } from '../services/combination-service';\r\n\r\nexport class TeamBuilderComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.combinationService = new CombinationService();\r\n    this.state = { \r\n      loading: true,\r\n      teamPokemonIndices: [ \"4\", \"12\", \"2\", \"7\", \"0\", \"23\" ] // sample\r\n    };\r\n    this.combinationService.loadMasterData().then(data => {\r\n      const allTeamPokemonNames = this.combinationService.getAllTeamPokemonNames();\r\n      const teamPokemonNameMap = allTeamPokemonNames.map((name, index) => ({id: index.toString(), name: name}));\r\n      this.setState({ \r\n        loading: false, \r\n        strVectorColumns: this.combinationService.getAllTargetPokemonNames(),\r\n        teamPokemonNameMap: teamPokemonNameMap \r\n      });\r\n    }, error => {\r\n      this.setState({ loading: false });\r\n      console.log(error);\r\n      throw new Error('Error: failed to init combinationService');\r\n    });\r\n  }\r\n\r\n  onChangeTeamPokemons(indices) {\r\n    this.setState({ teamPokemonIndices: indices });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <span>Loading...</span>\r\n    } else {  \r\n      const teamStrengthValues = this.combinationService.strValuesOfTeam(this.state.teamPokemonIndices);\r\n\r\n      return (\r\n        <>\r\n          <Container fluid className=\"mt-5\">\r\n            <Row>\r\n              <Col md={3}>\r\n                <TeamComponent num={6} pokemonList={this.state.teamPokemonNameMap} onChange={(indices) => this.onChangeTeamPokemons(indices)}></TeamComponent>\r\n              </Col>\r\n              <Col md={3}>\r\n                <SearchComponent></SearchComponent>\r\n              </Col>\r\n              <Col md={6}>\r\n                <SearchComponent></SearchComponent>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n    \r\n              </Col>\r\n              <Col>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n          <GraphComponent labels={this.state.strVectorColumns} values={teamStrengthValues}/>\r\n        </>\r\n    )};    \r\n  }\r\n}\r\n","import React from 'react';\r\n// import './App.css';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport { TeamBuilderComponent } from './components/teamBuilderComponent';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar bg=\"light\">\r\n        <Navbar.Brand>Pokémon VGC Team Combination Calculator</Navbar.Brand>\r\n      </Navbar>\r\n      <TeamBuilderComponent></TeamBuilderComponent>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/strength-table.d04147c7.csv\";","module.exports = __webpack_public_path__ + \"static/media/strategies.b4b7486a.csv\";","module.exports = __webpack_public_path__ + \"static/media/usage.706fcf81.csv\";"],"sourceRoot":""}